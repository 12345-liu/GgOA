<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.gg.ssm.mapper.RoleMapper">
	
	<!-- sql片段 -->
	<sql id="all_role_column">
		id,name,update_by,update_date,remarks
	</sql>
	<!-- 增加角色对象 -->
	<insert id="addRoleO" parameterType="role">
		<selectKey keyProperty="id" resultType="long" order="AFTER" >
               SELECT LAST_INSERT_ID() as id
        </selectKey>
        	  
		INSERT INTO PM_SYS_ROLE(NAME,UPDATE_BY, UPDATE_DATE,REMARKS)
		VALUES(#{name},#{updateBy},#{updateDate},#{remarks})
	</insert>
	<!--  批量增加角色菜单对应关系 -->
	<insert id="addRoleToMenuBatch" parameterType="roleToMenu">
		INSERT INTO PM_SYS_ROLE_MENU(ROLE_ID,MENU_ID)
		VALUES
		<foreach collection="list" item="roleToMenu" index="index" separator="," >  
        	(#{roleToMenu.roleId},#{roleToMenu.menuId})  
   		</foreach> 
	</insert>
	<!--  批量增加角色部门对应关系 -->
	<insert id="addRoleToDeptBatch" parameterType="roleToDept">
		INSERT INTO PM_SYS_ROLE_DEPT(ROLE_ID,DEPT_ID)
		VALUES
		<foreach collection="list" item="roleToDept" index="index" separator="," >  
        	(#{roleToDept.roleId},#{roleToDept.deptId})  
   		</foreach> 
	</insert>
	<!--  批量增加角色区域对应关系 -->
	<insert id="addRoleToAreaBatch" parameterType="roleToArea">
		INSERT INTO PM_SYS_ROLE_AREA(ROLE_ID,AREA_ID)
		VALUES
		<foreach collection="list" item="roleToArea" index="index" separator="," >  
        	(#{roleToArea.roleId},#{roleToArea.areaId})  
   		</foreach> 
	</insert>
	
	<!--增加角色菜单对应关系  -->
	<insert id="addRoleToMenu" parameterType = "roleToMenu">	
		INSERT INTO PM_SYS_ROLE_MENU(ROLE_ID,MENU_ID)
		VALUES(#{roleId},#{menuId})  
	</insert>
	<!--增加角色部门对应关系  -->
	<insert id="addRoleToDept" parameterType = "roleToDept">	
		INSERT INTO PM_SYS_ROLE_DEPT(ROLE_ID,DEPT_ID)
		VALUES(#{roleId},#{deptId})  
	</insert>
	<!--增加角色区域对应关系  -->
	<insert id="addRoleToArea" parameterType = "roleToArea">	
		INSERT INTO PM_SYS_ROLE_AREA(ROLE_ID,AREA_ID)
		VALUES(#{roleId},#{areaId})  
	</insert>
	
	<!-- 根据角色id 删除 角色菜单对应关系-->
	<delete id="delRoleMenuRoleId" parameterType="java.lang.Long">
		DELETE FROM  PM_SYS_ROLE_MENU  WHERE ROLE_ID =  #{roleId}	
	</delete>
	<!-- 根据角色id 删除 角色部门对应关系-->
	<delete id="delRoleDeptRoleId" parameterType="java.lang.Long">
		DELETE FROM  PM_SYS_ROLE_DEPT  WHERE ROLE_ID =  #{roleId}
	</delete>
	<!-- 根据角色id 删除 角色区域对应关系-->
	<delete id="delRoleAreaRoleId" parameterType="java.lang.Long">
		DELETE FROM  PM_SYS_ROLE_AREA  WHERE ROLE_ID =  #{roleId}
	</delete>
	<!-- 根据角色id 删除 角色用户对应关系-->
	<delete id="delRoleUserRoleId" parameterType="java.lang.Long">
		DELETE FROM  pm_sys_user_role WHERE ROLE_ID =  #{roleId}
	</delete>
	<!-- 根据角色id 删除 角色对象-->
	<delete id="delRole" parameterType="java.lang.Long">
		DELETE FROM PM_SYS_ROLE WHERE ID=#{id}
	</delete>
	<!-- 根据角色id查询  角色菜单关联 -->
	<select id="getMenuListByRoleId" parameterType="long" resultType="roleToMenu"> 
		SELECT ROLE_ID , MENU_ID 
 		FROM PM_SYS_ROLE_MENU
		WHERE ROLE_ID = #{roleId}		 	
	</select>
	<!-- 根据角色id查询  角色部门关联 -->
	<select id="getDeptListByRoleId" parameterType="long" resultType="roleToDept"> 
		SELECT ROLE_ID ,DEPT_ID 
 		FROM PM_SYS_ROLE_DEPT
		WHERE ROLE_ID = #{roleId}		 	
	</select>
	<!-- 根据角色id查询  角色区域关联 -->
	<select id="getAreaListByRoleId" parameterType="long" resultType="roleToArea"> 
		SELECT ROLE_ID ,AREA_ID 
 		FROM PM_SYS_ROLE_AREA
		WHERE ROLE_ID = #{roleId}		 	
	</select>
	<!-- 根据角色id查询角色信息 -->
	<select id="getRoleById" parameterType="java.lang.Long" resultType="role">
		select <include refid="all_role_column"></include> from pm_sys_role where id = #{id}
	</select>
	<!-- 获取所有角色列表 -->
	<select id="getRoleList" resultType="role">
		select 
			<include refid="all_role_column"></include>
		from pm_sys_role
	</select>
	
	<!-- 修改角色信息 -->
	<update id="UpdateRoleO" parameterType="role">
		UPDATE PM_SYS_ROLE  
		<set> 							 
	        <if test="name != null">
	            NAME = #{name},
	        </if>	   	                 
	        <if test="updateBy != null">
	            UPDATE_BY = #{updateBy},
	        </if>
	        <if test="updateDate != null">
	            UPDATE_DATE = #{updateDate},
	        </if>
	        <if test="remarks != null">
	            REMARKS = #{remarks},
	        </if>		 
		</set>
		WHERE ID = #{id}
	</update>
</mapper>